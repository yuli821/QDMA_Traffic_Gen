ifeq ($(RTE_SDK),)
$(error "Please define RTE_SDK environment variable")
endif

# Default target, can be overriden by command line or environment
RTE_TARGET ?= build

#Default BRAM size is set to 128K
#if modified the BRAM_SIZE, the same need to be set to the driver Makefile
BRAM_SIZE ?= 131072

# binary name
APP = test

# all source are stored in SRCS-y
SRCS-y := test.c pcierw.c

ifeq ($(CONFIG_RTE_LIBRTE_QDMA_GCOV),y)
  CFLAGS += -g -ftest-coverage -fprofile-arcs
  LDFLAGS += -lgcov
endif

# Build using pkg-config variables if possible
ifneq ($(shell pkg-config --exists libdpdk && echo 0),0)
$(error "no installation of DPDK found")
endif

all: shared
.PHONY: shared static
shared: build/$(APP)-shared
	ln -sf $(APP)-shared build/$(APP)
static: build/$(APP)-static
	ln -sf $(APP)-static build/$(APP)

PKGCONF ?= pkg-config

CFLAGS += -DBRAM_SIZE=$(BRAM_SIZE)
CFLAGS += -DDPDK=1

# Add flag to allow experimental API as qdma_testapp uses rte_ethdev_set_ptype API
CFLAGS += -DALLOW_EXPERIMENTAL_API

PC_FILE := $(shell $(PKGCONF) --path libdpdk 2>/dev/null)
CFLAGS += -O3 $(shell $(PKGCONF) --cflags libdpdk)
LDFLAGS_SHARED = $(shell $(PKGCONF) --libs libdpdk)
LDFLAGS_STATIC = $(shell $(PKGCONF) --static --libs libdpdk)
LDFLAGS += $(shell $(PKGCONF) --libs libdpdk)

LDFLAGS += -lrte_net_qdma

# for shared library builds, we need to explicitly link these PMDs
LDFLAGS_SHARED += -lrte_net_qdma

build/$(APP)-shared: $(SRCS-y) Makefile $(PC_FILE) | build
	$(CC) $(CFLAGS) $(SRCS-y) -o $@ $(LDFLAGS) $(LDFLAGS_SHARED)

build/$(APP)-static: $(SRCS-y) Makefile $(PC_FILE) | build
	$(CC) $(CFLAGS) $(SRCS-y) -o $@ $(LDFLAGS) $(LDFLAGS_STATIC)

build:
	@mkdir -p $@

.PHONY: clean
clean:
	rm -f build/$(APP) build/$(APP)-static build/$(APP)-shared
	test -d build && rmdir -p build || true
